{"version":3,"sources":["hooks/http.hook.js","hooks/message.hook.js","context/AuthContext.js","components/Loader.jsx","components/ProjectList.jsx","pages/ProjectsPage.jsx","pages/CreateProject.jsx","pages/AuthPage.jsx","components/WorkCreatorPopup.jsx","components/WorksList.jsx","components/ProjectCard.jsx","pages/ProjectDetail.jsx","components/Navbar.jsx","App.js","hooks/auth.hook.js","routes.jsx","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","useMessage","text","window","M","toast","html","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","Fragment","className","ProjectList","projects","deleteHandler","length","map","project","index","key","_id","to","name","Date","dateStart","toLocaleDateString","dateEnd","onClick","ProjectsPage","setProjects","useContext","fetchProjects","Authorization","fetched","id","deletedProject","useEffect","CreateProjectPage","history","useHistory","auth","startDate","undefined","endDate","location","form","setForm","changeHandler","event","target","value","submitHandler","preventDefault","push","action","type","onChange","required","htmlFor","AuthPage","password","registerHandler","loginHandler","disabled","WorkCreatorPopup","popupClose","getWorks","unit","count","pricePerOne","projectId","workForm","setWorkForm","WorksList","works","work","ProjectCard","isPopup","setPopup","popupHandler","ProjectDetail","setProject","setWorks","useParams","getProject","Navbar","href","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2906eabc.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method, body, headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так');\n      }\n\n      setLoading(false);\n\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    };\n  }, []);\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","import { useCallback } from 'react';\nexport const useMessage = () => {\n  return useCallback(text => {\n    if (window.M && text) {\n      window.M.toast({ html: text });\n    }\n  }, []);\n};\n","import { createContext } from 'react';\n\nfunction noop() {};\n\nexport const AuthContext = createContext({\n  token: null,\n  userId: null,\n  login: noop,\n  logout: noop,\n  isAuthenticated: false\n});\n","import React from 'react';\n\nexport const Loader = () => {\n  return <React.Fragment>\n    <div className=\"center-position\">\n      <div className=\"preloader-wrapper small active\">\n        <div className=\"spinner-layer spinner-green-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\"></div>\n          </div><div className=\"gap-patch\">\n            <div className=\"circle\"></div>\n          </div><div className=\"circle-clipper right\">\n            <div className=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </React.Fragment>\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const ProjectList = ({ projects, deleteHandler }) => {\n  if (!projects.length) {\n    return <p className=\"center\">Проектов пока нет</p>\n  }\n  return <React.Fragment>\n    <table>\n        <thead>\n          <tr>\n              <th>№</th>\n              <th>Название проекта</th>\n              <th>Дата начала</th>\n              <th>Дата окончания</th>\n              <th>Действия</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { projects.map( (project, index) => {\n            return (\n              <tr key={project._id}>\n                <td>{index + 1}</td>\n                <td><Link to={`/detail/${ project._id }`}>{project.name}</Link></td>\n                <td>{new Date(project.dateStart).toLocaleDateString()}</td>\n                <td>{new Date(project.dateEnd).toLocaleDateString()}</td>\n                <td>\n                  <button\n                    className=\"deep-purple lighteen-1 waves-effect waves-light btn\"\n                    onClick={() => deleteHandler(project._id)}\n                  >\n                    Удалить\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n          \n        </tbody>\n      </table>\n  </React.Fragment>\n};\n","import React, { useState, useContext, useCallback, useEffect } from 'react';\nimport { useHttp } from '../hooks/http.hook.js';\nimport { useMessage } from '../hooks/message.hook.js';\nimport { AuthContext } from '../context/AuthContext.js';\nimport { Loader } from '../components/Loader.jsx';\nimport { ProjectList } from '../components/ProjectList.jsx';\n\nexport const ProjectsPage = () => {\n  const [projects, setProjects] = useState([]);\n  const {loading, request} = useHttp();\n  const {token} = useContext(AuthContext);\n  const message = useMessage();\n\n  const fetchProjects = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/project`, `GET`, null, {\n        Authorization: `Bearer ${ token }`\n      });\n      setProjects(fetched);\n    } catch (e) {};\n  }, [token, request]);\n\n  const deleteHandler = async (id) => {\n    const deletedProject = await request(`/api/project/${ id }`, `DELETE`, null, {\n      Authorization: `Bearer ${ token }`\n    });\n      message(deletedProject.message);\n      fetchProjects();\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n\n  if (loading) {\n    return <Loader />\n  }\n\n  return <React.Fragment>\n    { !loading && <ProjectList projects={projects} deleteHandler={deleteHandler} />}\n  </React.Fragment>\n};\n","import React, { useState, useContext } from 'react';\nimport { useHttp } from '../hooks/http.hook.js';\nimport { AuthContext } from '../context/AuthContext.js';\nimport { useHistory } from 'react-router-dom';\n\nexport const CreateProjectPage = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const [form, setForm] = useState({\n    name: '',\n    startDate: undefined,\n    endDate: undefined,\n    location: ''\n  });\n  const { request } = useHttp();\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await request(`/api/project/generate`, 'POST', form, {\n        Authorization: `Bearer ${ auth.token }`\n      });\n      history.push(`/detail/${ data.project._id }`);\n    } catch (e) {}\n  };\n\n  return <React.Fragment>\n    <div className=\"container\">\n      <div className=\"row\">\n        <form action=\"POST\" className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s6\" >\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={form.name}\n                onChange={changeHandler}\n                required\n              />\n              <label htmlFor=\"name\">Название проекта</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s2\" >\n              <input\n                id=\"dateStart\"\n                type=\"date\"\n                name=\"dateStart\"\n                value={form.startDate}\n                onChange={changeHandler}\n              />\n              <label htmlFor=\"dateStart\">Дата начала</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s2\" >\n              <input\n                id=\"dateEnd\"\n                type=\"date\"\n                name=\"dateEnd\"\n                value={form.endDate}\n                onChange={changeHandler}\n              />\n              <label htmlFor=\"dateEnd\">Дата окончания</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s6\" >\n              <input\n                id=\"location\"\n                type=\"text\"\n                name=\"location\"\n                value={form.location}\n                onChange={changeHandler}\n              />\n              <label htmlFor=\"location\">Расположение</label>\n            </div>\n          </div>\n          <button\n            className=\"deep-purple lighteen-1 waves-effect waves-light btn\"\n            type=\"submit\"\n            onClick={submitHandler}\n          >\n            Создать\n          </button>\n        </form>\n      </div>\n    </div>\n  </React.Fragment>\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHttp } from '../hooks/http.hook.js';\nimport { useMessage } from '../hooks/message.hook.js';\nimport { AuthContext } from '../context/AuthContext.js';\n\nexport const AuthPage = () => {\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const { loading, request, error, clearError } = useHttp();\n  const [form, setForm] = useState({\n    login: '',\n    password: ''\n  });\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', {...form});\n      message(data.message);\n    } catch (e) {};\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', {...form});\n      auth.login(data.token, data.userId);\n    } catch (e) {};\n  };\n\n  return <React.Fragment>\n      <section className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s6 offset-s3\">\n            <div className=\"card blue-grey darken-1\">\n              <div className=\"card-content white-text\">\n                <h2 className=\"card-title center\">Авторизация</h2>\n                \n                <div className=\"row\">\n                  <div className=\"input-field col s6\">\n                    <input\n                      id=\"login\"\n                      type=\"text\"\n                      name=\"login\"\n                      value={form.login}\n                      onChange={changeHandler}\n                    />\n                    <label className=\"white-text\" htmlFor=\"login\">Login</label>\n                  </div>\n   \n                  <div className=\"input-field col s6\">\n                    <input\n                      id=\"password\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={form.password}\n                      onChange={changeHandler}\n                    />\n                    <label className=\"white-text\" htmlFor=\"password\">Password</label>\n                  </div>\n                </div>\n  \n              </div>\n              \n              <div className=\"card-action\">\n                <button\n                  className=\"btn orange lighten-2 margin-r-1\"\n                  onClick={loginHandler}\n                  disabled={loading}\n                >\n                  Войти\n                </button>\n                <button\n                  className=\"btn waves-effect waves-light indigo lighten-2\"\n                  onClick={registerHandler}\n                  disabled={loading}\n                >\n                  Регистрация\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n  </React.Fragment>\n};\n","import React, { useState, useContext } from 'react';\nimport { useHttp } from '../hooks/http.hook.js';\nimport { AuthContext } from '../context/AuthContext.js';\n\nexport const WorkCreatorPopup = ({ id, popupClose, getWorks }) => {\n  const auth = useContext(AuthContext);\n  const { request } = useHttp();\n  const [workForm, setWorkForm] = useState({\n    name: ``,\n    dateStart: undefined,\n    dateEnd: undefined,\n    unit: ``,\n    count: undefined,\n    pricePerOne: undefined,\n    projectId: id\n  });\n\n  const changeHandler = (event) => {\n    setWorkForm({ ...workForm, [event.target.name]: event.target.value });\n  };\n\n  const submitHandler = async () => {\n    try {\n      await request(`/api/works/create`, `POST`, workForm, {\n        Authorization: `Bearer ${ auth.token }`\n      });\n      popupClose();\n      getWorks();\n    } catch (e) {}\n  };\n\n  return <React.Fragment>\n    <article className=\"pop-up row\">\n      <div className=\"col s6 offset-s3\">\n        <div className=\"card  margin-t-20\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Добавить работы</span>\n\n            <div className=\"row\">\n              <div className=\"input-field col s8\">\n                <input\n                  id=\"workName\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={workForm.name}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"workName\">Наименование</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s3\">\n                <input\n                  id=\"unit\"\n                  type=\"text\"\n                  name=\"unit\"\n                  value={workForm.unit}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"unit\">Ед.изм.</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s3\">\n                <input\n                  id=\"count\"\n                  type=\"number\"\n                  name=\"count\"\n                  value={workForm.count}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"unit\">Объем работ</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s3\">\n                <input\n                  id=\"pricePerOne\"\n                  type=\"number\"\n                  name=\"pricePerOne\"\n                  value={workForm.pricePerOne}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"unit\">Цена за ед.</label>\n              </div>\n            </div>\n\n          </div>\n          <footer className=\"card-action\">\n            <button\n              className=\"waves-effect waves-light btn deep-purple lighteen-1\"\n              onClick={submitHandler}\n            >\n              Сохранить\n            </button>\n            <button\n              className=\"waves-effect waves-light btn red\"\n              onClick={popupClose}\n            >\n              Отмена\n            </button>\n          </footer>\n        </div>\n      </div>\n    </article>\n  </React.Fragment>\n};\n","import React from 'react';\n\nexport const WorksList = ({ works }) => {\n  if (!works.length) {\n    return <h3 className=\"center red-text\">Перечень работ не определен. Добавьте работы в проект</h3>;\n  }\n  return <React.Fragment>\n    <table>\n        <thead>\n          <tr>\n              <th>№</th>\n              <th>Нааименование работ</th>\n              <th>Ед. изм.</th>\n              <th>Цена за ед.</th>\n              <th>Кол-во</th>\n              <th>Цена</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { works.map( (work, index) => {\n            return (\n              <tr key={work._id}>\n                <td>{index + 1}</td>\n                <td>{work.name}</td>\n                <td>{work.unit}</td>\n                <td>{work.pricePerOne} р.</td>\n                <td>{work.count} {work.unit}</td>\n                <td>{work.count * work.pricePerOne} р.</td>\n              </tr>\n            );\n          })}\n          \n        </tbody>\n      </table>\n  </React.Fragment>\n};\n","import React, { useState } from 'react';\nimport { WorkCreatorPopup } from '../components/WorkCreatorPopup.jsx';\nimport { WorksList } from '../components/WorksList.jsx';\n\nexport const ProjectCard = ({ project, works, getWorks }) => {\n  const [isPopup, setPopup] = useState(false);\n\n  const popupHandler = () => {\n    setPopup(!isPopup); \n  };\n\n  return <React.Fragment>\n    <header className=\"project-card__header\">\n      <h2 className=\"center\">{ project.name }</h2>\n      <p className=\"margin-l-2\">Дата реализации проекта: с { new Date(project.dateStart).toLocaleDateString() } по { new Date(project.dateEnd).toLocaleDateString() }</p>\n      <p className=\"margin-l-2\">Местонахождение: { project.location }</p>\n    </header>\n    <main className=\"project-card__main\">\n      <WorksList works={works}/>\n      <button\n        className=\"margin-t-20 margin-l-2 btn-floating btn-large waves-effect waves-light deep-purple lighteen-1\"\n        onClick={popupHandler}\n      ><i>+</i>\n      </button>\n    </main>\n    {isPopup && <WorkCreatorPopup id={project._id} popupClose={popupHandler} getWorks={getWorks}/>}\n  </React.Fragment>\n};\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttp } from '../hooks/http.hook.js';\nimport { AuthContext } from '../context/AuthContext.js';\nimport { Loader } from '../components/Loader.jsx';\nimport { ProjectCard } from '../components/ProjectCard.jsx'\n\nexport const ProjectDetail = () => {\n  const {token} = useContext(AuthContext);\n  const {request, loading} = useHttp();\n  const [project, setProject] = useState(null);\n  const [works, setWorks] = useState([]);\n  const projectId = useParams().id;\n\n  const getProject = useCallback(async ( ) => {\n    try {\n      const fetched = await request(`/api/project/${ projectId }`, `GET`, null, {\n        Authorization: `Bearer ${ token }`\n      });\n      setProject(fetched);\n    } catch (e) {};\n  }, [token, projectId, request]);\n\n    const getWorks = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/works/${ projectId }`, `GET`, null, {\n        Authorization: `Bearer ${ token }`\n      });\n      setWorks(fetched);\n    } catch (e) {}\n  }, [token, projectId, request]);\n\n\n  useEffect(() => {\n    getProject();\n  }, [getProject]);\n\n  useEffect(() => {\n    getWorks();\n  }, [getWorks]);\n\n  if (loading) {\n    return <Loader />\n  };\n\n  return <React.Fragment>\n    { !loading && project && <ProjectCard project={project} works={works} getWorks={getWorks}/> }\n  </React.Fragment>\n};\n","import React, { useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext.js';\n\nexport const Navbar = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const logoutHandler = (event) => {\n    event.preventDefault();\n    auth.logout();\n    history.push('/');\n  };\n\n  return <React.Fragment>\n    <nav className=\"deep-purple lighteen-1\">\n      <div className=\"nav-wrapper\">\n        <span className=\"brand-logo center\">Управление проектами</span>\n        <ul className=\"left hide-on-med-and-down\">\n          <li><NavLink to=\"/create\">Создать проект</NavLink></li>\n          <li><NavLink to=\"/projects\">Проекты</NavLink></li>\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\n        </ul>\n      </div>\n    </nav>\n  </React.Fragment>\n};\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useRoutes } from './routes.jsx';\nimport { useAuth } from './hooks/auth.hook.js';\nimport { AuthContext } from './context/AuthContext.js';\nimport { Navbar } from './components/Navbar.jsx';\nimport { Loader } from './components/Loader.jsx';\nimport 'materialize-css';\n\nfunction App() {\n  const {token, login, logout, userId, ready} = useAuth();\n  const isAuthenticated = !!token;\n  const routes = useRoutes(isAuthenticated);\n\n  if(!ready) {\n    return <Loader />\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n      <BrowserRouter>\n        {isAuthenticated && <Navbar />}\n        <main>\n          { routes }\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from 'react';\n\nconst STORAGE_NAME = 'userData';\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((jwtToken, id)=> {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(STORAGE_NAME, JSON.stringify({\n      userId: id, token: jwtToken\n    }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(STORAGE_NAME);\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(STORAGE_NAME));\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n    setReady(true);\n  }, [login]);\n\n  return { login, logout, token, userId, ready };\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ProjectsPage } from './pages/ProjectsPage.jsx';\nimport { CreateProjectPage } from './pages/CreateProject.jsx';\nimport { AuthPage } from './pages/AuthPage.jsx';\nimport { ProjectDetail } from './pages/ProjectDetail.jsx';\n\nexport const useRoutes = isAuthenticated => {\n  if (isAuthenticated) {\n    return (\n      <Switch>\n        <Route path=\"/projects\" exact>\n          <ProjectsPage />\n        </Route>\n        <Route path=\"/create\" exact>\n          <CreateProjectPage />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <ProjectDetail />\n        </Route>\n        <Redirect to=\"/projects\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <AuthPage />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}